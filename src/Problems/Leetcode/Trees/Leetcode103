/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> result = new LinkedList<>();
        if(root==null) return result;
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        boolean leftToright = true;
        while(!q.isEmpty()){
            int Qsize = q.size();
            LinkedList<Integer> currLevel = new LinkedList<>();
            for(int i=0; i<Qsize; i++){
                TreeNode temp = q.poll();
                if(leftToright){
                    currLevel.addLast(temp.val);
                }else{
                    currLevel.addFirst(temp.val);
                }

                if(temp.left!=null) q.offer(temp.left);
                if(temp.right!=null) q.offer(temp.right);
            }
            result.add(currLevel);
            leftToright = !leftToright;
        }
        return result;
    }
}